lang ru_RU.utf8
syntax enable
filetype plugin indent on

colorscheme slate

set path=.:**
set encoding=utf-8
set shiftwidth=4
set tabstop=4
set expandtab
set complete=.,d,kspell
set completeopt=menu,menuone,popuphidden,noinsert
set wildignorecase
set wildoptions=fuzzy,pum
set showtabline=2
set virtualedit=onemore
set list
set listchars=tab:<->,trail:·
set mouse=a
set mousemodel=popup
set number
set ignorecase
set smartcase
set smartindent
set smarttab
set splitright
set splitbelow
set hlsearch
set incsearch
set switchbuf=useopen,usetab,vsplit
set cursorlineopt=number
set cursorline
set showcmd
set noswapfile
set undofile
set undodir=~/.vim/undo
set shortmess-=S
set shortmess-=C
set updatetime=500
set timeout timeoutlen=500 ttimeoutlen=10
set termguicolors
set nocompatible
set omnifunc=syntaxcomplete#Complete
set dictionary=spell
set nospell spelllang=ru,en
set t_md=
set t_mb=
set t_Co=256
fixdel

let &t_SI = "\e[5 q\<Esc>]12;green\x7"
let &t_SR = "\e[5 q\<Esc>]12;magenta\x7"
let &t_EI = "\e[2 q\<Esc>]12;red\x7"

execute system('test -e ~/.vim/undo || mkdir ~/.vim/undo')
execute system('
    \ test -e ~/.vim/autoload/plug.vim ||
    \ curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    \')

call plug#begin()
Plug 'farmergreg/vim-lastplace'
call plug#end()

set laststatus=2
set statusline=
set statusline+=%#Icon#
set statusline+=\  
set statusline+=%#NormalC#%{(mode()=='n')?'\ NORMAL\ ':''}
set statusline+=%#InsertC#%{(mode()=='i')?'\ INSERT\ ':''}
set statusline+=%#VisualC#%{(mode('1')=~'v')?'\ VISUAL\ ':''}
set statusline+=%#Filename#
set statusline+=\ %f
set statusline+=%#ReadOnly#
set statusline+=\ %r
set statusline+=%m
set statusline+=%=
set statusline+=%#Fileformat#
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\ [%{&fileformat}\]
set statusline+=%#Position#
set statusline+=\ [%l/%L]

nmap <Enter> i
nmap <S-q> :qa<CR>
nmap <C-q> :bd<CR>
nmap q     :q<CR>
nmap <Tab> <C-w>w
map  <C-s> :w<CR>
inoremap <C-s>  <Esc>:w<CR>
inoremap <expr> <Esc> pumvisible() ? "\<C-e>" : "\<C-c>"
cnoremap <expr> <Esc> pumvisible() ? "\<C-e>" : "\<C-c>"
nnoremap <expr> <Esc> get(v:,'hlsearch') ? ":noh<CR>" : &bt != '' && &bt != 'help' ? ":q<CR>" : ":redraw!<CR>"
nnoremap ; q:
vmap <C-c> ""y g`< :call system("xclip -i -sel p -f \| xclip -i -sel c", trim(@"))<CR>
vmap <C-x> ""x g`<
nmap <C-v> ""gP
vmap <C-v> ""Pgvy
imap <C-v> <C-o>""gP
cmap <C-v> <C-r>=trim(@")<CR>
vmap <LeftMouse> <C-c>
nmap = <C-w>=
nnoremap x     <C-v>
nnoremap <A-v> <C-v>
nmap <C-d> :Lexplore<CR>
nmap <C-z> u
imap <C-u> <C-o>u
imap <C-z> <C-o>u
vnoremap <BS> "_d
cnoremap <expr> <CR>  pumvisible() ? "\<C-y><Space>" : "\<CR>"
nmap     <C-n> i<C-n>
inoremap <C-@>  <C-x><C-o>
nmap     <C-@> i<C-@>
inoremap <C-BS> <C-w>
inoremap <C-h>  <C-w>
nnoremap <C-h>  :execute(printf(":help %s*",expand("<cword>")))<CR>

augroup help_position
    au!
    au BufWinEnter * if &ft == 'help' | wincmd L | setlocal winfixwidth | vert resize 80 | endif
augroup END

augroup auto_complete
    au!
    au CursorHoldI * if pumvisible() == 0 && &bt == '' && getcmdtype() == '' && &diff == 0
            \ && getline('.')[col('.')-2] =~ '[a-z]' | silent! call feedkeys("\<C-x>\<C-o>") | endif
augroup END

let g:netrw_liststyle = 3
let g:netrw_preview = 1
let g:netrw_keepdir = 1
let g:netrw_usetab = 1
let g:netrw_browse_split = 2
let g:netrw_altv = 1
let g:netrw_alto = 0
let g:netrw_winsize = 50
let g:netrw_fastbrowse = 1
let g:netrw_mousemaps = 0
let g:netrw_banner = 0
let g:netrw_sort_options = 'i'
let g:netrw_list_hide = '^\.+'

